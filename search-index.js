var searchIndex = JSON.parse('{\
"libray":{"doc":"raylib","t":[0,0,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,11,11,11,5,5,5,11,5,11,5,12,11,11,12,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["graphics","math","Canvas","Color","Light","Material","add","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","default","div","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","g","height","intensity","into","into","into","into","lighting","mul","mul","ne","neg","new","new","new","new","pixel_at","position","r","sub","to_owned","to_owned","to_owned","to_owned","to_ppm","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","width","write_pixel","Intersection","Matrix","Ray","Sphere","Tuple","add","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cofactor","cross","determinant","direction","div","dot","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hit","index","index","index_mut","intersect","into","into","into","into","into","inverse","is_invertible","is_point","is_vector","magnitude","material","minor","mul","mul","mul","ne","ne","ne","neg","new","new","new","new","new","normal_at","normalize","partial_cmp","partial_cmp","point","position","reflect","rotate_x","rotate_y","rotate_z","rotation_x","rotation_y","rotation_z","scale","scaling","skew","skewing","sphere","sub","submatrix","t","to_owned","to_owned","to_owned","to_owned","to_owned","transform","transform","transform","translate","translation","transpose","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vector","w","x","y","z"],"q":["libray","","libray::graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libray::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Graphics module","Math module","Represents a two-dimensional grid of pixels","Three-dimensional color representation","Representation of a point light - a light source with no …","Representation of a surface material","","Blue value","","","","","","","","","","","","","","","","","Surface color","","","","","","","","","","","","","Green value","Height of the canvas","Brightness of the light","","","","","Shades the material given a point light, position on the …","","","","","Creates a new canvas, given a width and a height","Creates a new color","Creates a new point light given a position and an intensity","Creates a new material with default values","Returns the color of the pixel on the canvas at the given …","Position of the point light","Red value","","","","","","Converts the canvas to a PPM-encoded string","","","","","","","","","","","","","Width of the canvas","Writes a pixel to the canvas at a point with the given …","Aggregation of time and object that was intersected","Matrix representation","Represents an individual ray","Represents a sphere object","3 Dimensional Tuple struct representing points or vectors.","","","","","","","","","","","","","","","","","","","","","","Returs the cofactor at given row and column","Computes the cross product of two given vectors and …","Returns the determinant of the Matrix","Direction vector of the ray","","Computes the dot product of two given vectors and returns …","","","","","","","","","","","","","","","","","","","Returns the first nonnegative intersection as a hit","","","","Calculates and returns the points at which the ray …","","","","","","Inverts the given Matrix and returns a new one","Returns true if Matrix is invertible, otherwise false","Determines if given Tuple is a point","Determines if given Tuple is a vector","Computes the magnitude of given vector Tuple using …","Material of the sphere","Returns the minor at given row and column","","","","","","","","Returns a new ray with an origin and a direction","Returns a new sphere object","Returns a new intersection","Returns a new identity Matrix with given size","Creates a new Tuple","Returns the normal vector of given sphere at given point","Normalizes the given vector Tuple to a unit vector","","","Creates a new point Tuple where <code>w</code> is <code>1.0</code>","Returns the position as a point tuple of ray at time t","Returns the reflected vector of given vector around a …","Returns a rotation matrix around the x axis","Returns a rotation matrix around the y axis","Returns a rotation matrix around the z axis","Returns a rotation matrix around the x axis","Returns a rotation matrix around the y axis","Returns a rotation matrix around the z axis","Returns a scling matrix with the given scale units","Returns a scling matrix with the given scale units","Skews the matrix","Returns a skewing matrix","Reference to intersected object","","Returns the submatrix with the given row and column removed","Time where an object was","","","","","","Returns a new ray transformed by the given transformation …","Sets the transformation matrix of sphere to given …","Transformation matrix of the Sphere","Returns a translation matrix with the given translation …","Returns a translation matrix with the given translation …","Transposes Matrix and returns a new Matrix","","","","","","","","","","","","","","","","Creates a new vector Tuple where <code>w</code> is <code>0.0</code>","w-value of the tuple. A non-zero value indicates a point, …","x-value of the tuple","y-value of the tuple","z-value of the tuple"],"i":[0,0,0,0,0,0,1,1,2,1,3,4,2,1,3,4,2,1,3,4,2,1,3,4,4,1,1,1,4,2,1,3,4,2,1,3,4,1,2,3,2,1,3,4,4,1,1,4,1,2,1,3,4,2,3,1,1,2,1,3,4,2,2,1,3,4,2,1,3,4,2,1,3,4,2,2,0,0,0,0,0,5,6,7,8,9,5,6,7,8,9,5,6,7,8,9,5,6,7,8,9,5,9,5,9,6,5,5,6,7,8,9,5,6,7,8,9,5,6,7,8,9,9,9,5,5,8,9,5,9,6,6,7,8,9,5,9,9,5,5,5,7,9,9,9,5,6,7,8,5,6,7,8,9,5,0,5,8,5,5,6,0,9,9,9,0,0,0,9,0,9,0,8,5,9,8,6,7,8,9,5,6,7,7,9,0,9,6,7,8,9,5,6,7,8,9,5,6,7,8,9,5,5,5,5,5,5],"f":[null,null,null,null,null,null,[[["color",3]],["color",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["canvas",3]],[[],["color",3]],[[],["light",3]],[[],["material",3]],[[]],[[]],[[]],[[]],null,[[],["color",3]],[[["f64",15]],["color",3]],[[["color",3]],["bool",15]],[[["material",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["light",3],["tuple",3]],["color",3]],[[["f64",15]],["color",3]],[[["color",3]],["color",3]],[[["material",3]],["bool",15]],[[],["color",3]],[[["usize",15]],["canvas",3]],[[["f64",15]],["color",3]],[[["tuple",3],["color",3]],["light",3]],[[],["material",3]],[[["usize",15]],["color",3]],null,null,[[["color",3]],["color",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["usize",15],["color",3]]],null,null,null,null,null,[[["tuple",3]],["tuple",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ray",3]],[[],["sphere",3]],[[],["intersection",3]],[[],["matrix",3]],[[],["tuple",3]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["f64",15]],[[["tuple",3]],["tuple",3]],[[],["f64",15]],null,[[["f64",15]],["tuple",3]],[[["tuple",3]],["f64",15]],[[["ray",3]],["bool",15]],[[["sphere",3]],["bool",15]],[[["intersection",3]],["bool",15]],[[["matrix",3]],["bool",15]],[[["tuple",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["vec",3,["f64"]],["f64",15]],["matrix",3]],[[["vec",3,["f64"]],["vec",3,["vec"]]],["matrix",3]],[[]],[[["vec",3,["f64"]],["f64",15]],["tuple",3]],[[["vec",3]],[["option",4,["intersection"]],["intersection",3]]],[[],["f64",15]],[[["usize",15]],["f64",15]],[[],["f64",15]],[[["sphere",3]],[["vec",3,["intersection"]],["intersection",3]]],[[]],[[]],[[]],[[]],[[]],[[],["matrix",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["f64",15]],null,[[["usize",15]],["f64",15]],[[["matrix",3]],["matrix",3]],[[["tuple",3]],["tuple",3]],[[["f64",15]],["tuple",3]],[[["ray",3]],["bool",15]],[[["sphere",3]],["bool",15]],[[["intersection",3]],["bool",15]],[[],["tuple",3]],[[["tuple",3]],["ray",3]],[[],["sphere",3]],[[["sphere",3],["f64",15]],["intersection",3]],[[["usize",15]],["matrix",3]],[[["f64",15]],["tuple",3]],[[["sphere",3],["tuple",3]],["tuple",3]],[[],["tuple",3]],[[],[["option",4,["ordering"]],["ordering",4]]],[[["tuple",3]],[["option",4,["ordering"]],["ordering",4]]],[[["f64",15]],["tuple",3]],[[["f64",15]],["tuple",3]],[[["tuple",3]],["tuple",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],null,[[["tuple",3]],["tuple",3]],[[["usize",15]],["matrix",3]],null,[[]],[[]],[[]],[[]],[[]],[[["matrix",3]],["ray",3]],[[["matrix",3]]],null,[[["f64",15]],["matrix",3]],[[["f64",15]],["matrix",3]],[[],["matrix",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["f64",15]],["tuple",3]],null,null,null,null],"p":[[3,"Color"],[3,"Canvas"],[3,"Light"],[3,"Material"],[3,"Tuple"],[3,"Ray"],[3,"Sphere"],[3,"Intersection"],[3,"Matrix"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};